plugins {
	id 'org.springframework.boot' version '2.6.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'test-report-aggregation'
	id 'java'
	id 'java-library'

}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'	
	
}

tasks.named('test') {
	useJUnitPlatform()
}

/* tasks.register('composeup') {
	dependsOn tasks.test

	doLast {
		exec {
			workingDir '.'
			commandLine 'docker-compose', 'up', '-d'
			standardOutput = new ByteArrayOutputStream()
			ext.output = {
				return standardOutput.toString()
			}
		}
	}
} */


task composeUp(type:Exec) {
	workingDir '.'
	commandLine 'docker-compose', '-f', 'docker-compose.yml', 'up'
	standardOutput = new ByteArrayOutputStream()
  	ext.output = {
    	return standardOutput.toString()
  	}
			
} 

task composeDependenciesUp(type: Exec) {
   workingDir "$projectDir"
   commandLine 'docker-compose', '-f', 'docker-compose.yml', 'up', '-d'
}
task composeDown(type: Exec) {
   workingDir "$projectDir"
   commandLine 'docker-compose', 'down', '-t', '60', '-v'
}

/* task composeDown(type:Exec) {
	workingDir '.'
	commandLine "cmd", "docker-compose down"
} */
